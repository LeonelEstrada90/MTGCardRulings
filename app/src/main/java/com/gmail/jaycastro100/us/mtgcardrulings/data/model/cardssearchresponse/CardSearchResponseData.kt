package com.gmail.jaycastro100.us.mtgcardrulings.data.model.cardssearchresponse

data class CardSearchResponseData(
    val all_parts: List<AllPart>? = listOf(),
    val arena_id: Int? = 0,
    val artist: String? = "",
    val artist_ids: List<String>? = listOf(),
    val booster: Boolean? = false,
    val border_color: String? = "",
    val card_back_id: String? = "",
    val card_faces: List<CardFace>? = listOf(),
    val cardmarket_id: Int? = 0,
    val cmc: Double? = 0.0,
    val collector_number: String? = "",
    val color_identity: List<String>? = listOf(),
    val colors: List<String>? = listOf(),
    val digital: Boolean? = false,
    val edhrec_rank: Int? = 0,
    val finishes: List<String>? = listOf(),
    val flavor_name: String? = "",
    val flavor_text: String? = "",
    val foil: Boolean? = false,
    val frame: String? = "",
    val frame_effects: List<String>? = listOf(),
    val full_art: Boolean? = false,
    val games: List<String>? = listOf(),
    val highres_image: Boolean? = false,
    val id: String? = "",
    val illustration_id: String? = "",
    val image_status: String? = "",
    val image_uris: ImageUrisX? = ImageUrisX(),
    val keywords: List<String>? = listOf(),
    val lang: String? = "",
    val layout: String? = "",
    val legalities: Legalities? = Legalities(),
    val loyalty: String? = "",
    val mana_cost: String? = "",
    val mtgo_foil_id: Int? = 0,
    val mtgo_id: Int? = 0,
    val multiverse_ids: List<Int>? = listOf(),
    val name: String? = "",
    val nonfoil: Boolean? = false,
    val `object`: String? = "",
    val oracle_id: String? = "",
    val oracle_text: String? = "",
    val oversized: Boolean? = false,
    val penny_rank: Int? = 0,
    val power: String? = "",
    val preview: Preview? = Preview(),
    val prices: Prices? = Prices(),
    val prints_search_uri: String? = "",
    val produced_mana: List<String>? = listOf(),
    val promo: Boolean? = false,
    val promo_types: List<String>? = listOf(),
    val purchase_uris: PurchaseUris? = PurchaseUris(),
    val rarity: String? = "",
    val related_uris: RelatedUris? = RelatedUris(),
    val released_at: String? = "",
    val reprint: Boolean? = false,
    val reserved: Boolean? = false,
    val rulings_uri: String? = "",
    val scryfall_set_uri: String? = "",
    val scryfall_uri: String? = "",
    val security_stamp: String? = "",
    val `set`: String? = "",
    val set_id: String? = "",
    val set_name: String? = "",
    val set_search_uri: String? = "",
    val set_type: String? = "",
    val set_uri: String? = "",
    val story_spotlight: Boolean? = false,
    val tcgplayer_etched_id: Int? = 0,
    val tcgplayer_id: Int? = 0,
    val textless: Boolean? = false,
    val toughness: String? = "",
    val type_line: String? = "",
    val uri: String? = "",
    val variation: Boolean? = false,
    val watermark: String? = ""
)